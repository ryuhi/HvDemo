<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc 
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">
	<!-- 模版引擎FreeMarker设置 -->
	<bean id="freemarkerConfig"
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<property name="freemarkerSettings">
			<props>
				<prop key="template_update_delay">0</prop>
				<prop key="defaultEncoding">UTF-8</prop>
				<prop key="url_escaping_charset">UTF-8</prop>
				<prop key="locale">zh_CN</prop>
				<prop key="boolean_format">true,false</prop>
				<prop key="datetime_format">yyyy-MM-dd HH:mm:ss</prop>
				<prop key="date_format">yyyy-MM-dd</prop>
				<prop key="time_format">HH:mm:ss</prop>
				<prop key="number_format">0.######</prop>
				<prop key="whitespace_stripping">true</prop>
			</props>
		</property>
	</bean>
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
		<property name="cache" value="true"></property>
		<property name="suffix" value=".ftl" />
		<property name="requestContextAttribute" value="base" />
		<property name="contentType" value="text/html; charset=UTF-8" />
	</bean>
			<!-- 以下 validator  ConversionService 在使用 mvc:annotation-driven 会 自动注册-->
		    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
		        <property name="providerClass" value="org.hibernate.validator.HibernateValidator"/>
		        <property name="validationMessageSource" ref="messageSource"/>
		    </bean>
		        <!-- 国际化的消息资源文件（本系统中主要用于显示/错误消息定制） -->
		    <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		        <property name="basenames">
		            <list>
						<value>classpath:messages</value>
		                <value>classpath:org/hibernate/validator/ValidationMessages_zh_CN</value>
		            </list>
		        </property>
		        <property name="defaultEncoding" value="UTF-8"/>
		        <property name="cacheSeconds" value="60"/>
		    </bean>
<!-- 	<mvc:annotation-driven>   -->
	<mvc:annotation-driven validator="validator">  
<!-- 		<mvc:argument-resolvers> -->
 			<!--配置注入登录用户的解析器-->
<!-- 			<bean id="currentUserMethodArgumentResolver" class="cn.com.qiboot.NewConsumerProject.backstage.auth.resolvers.CurrentUserMethodArgumentResolver"> -->
<!-- 			</bean> -->
<!-- 	    </mvc:argument-resolvers> -->
		<mvc:message-converters>
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
				<property name="supportedMediaTypes" value="text/plain;charset=UTF-8" />
			</bean>
			<!--采用阿里巴巴所编写的json转换-->
			<bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter" >
				<property name="supportedMediaTypes">
					<list>
						<value>text/plain;charset=UTF-8</value>
						<value>application/json;charset=UTF-8</value>
					</list>
				</property>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>
<!-- 	<mvc:interceptors> -->
		<!-- 使用bean定义一个Interceptor，直接定义在mvc:interceptors根下面的Interceptor将拦截所有的请求 -->
<!-- 		<bean class="cn.com.qiboot.NewConsumerProject.backstage.auth.interceptor.AuthorizationInterceptor" > -->
<!-- 		</bean> -->
<!-- 	</mvc:interceptors> -->
</beans>